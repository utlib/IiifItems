[routes]

;-: Reverse root URI
iiifitems_root.route = ""


; ===== IIIF ROUTES =====

;-: Reverse route URI (OA)
iiifitems_oa_uri.route = "oa/:things/:id/:typeext"
iiifitems_oa_uri.reqs.things = "(collections|items|files|exhibit_page_blocks)"
iiifitems_oa_uri.reqs.id = "(\d+)"
iiifitems_oa_uri.reqs.typeext = "(collection|manifest|sequence|canvas|anno|range|layer|annolist).json"
iiifitems_oa_uri.map.1 = "things"
iiifitems_oa_uri.map.2 = "id"
iiifitems_oa_uri.map.3 = "typeext"
iiifitems_oa_uri.reverse = "oa/%s/%d/%s"

;GET: annolist.json for items (OA)
iiifitems_annolist.route = "oa/items/:id/annolist.json"
iiifitems_annolist.defaults.module = "iiif-items"
iiifitems_annolist.defaults.controller = "annotation"
iiifitems_annolist.defaults.action = "list"
iiifitems_annolist.reqs.id = "(\d+)"
iiifitems_annolist.reverse = "oa/items/:id/annolist.json"

;GET: manifest.json for things (OA)
iiifitems_manifest.route = "oa/:things/:id/manifest.json"
iiifitems_manifest.defaults.module = "iiif-items"
iiifitems_manifest.defaults.controller = "manifest"
iiifitems_manifest.defaults.action = "manifest"
iiifitems_manifest.reqs.things = "(collections|items|files|exhibit_page_blocks)"
iiifitems_manifest.reqs.id = "(\d+)"
iiifitems_manifest.reverse = "oa/:things/:id/manifest.json"

; ===== Accessory pages =====

;POST: Repair item
iiifitems_repair_item.route = "iiif-items/items/:id/repair"
iiifitems_repair_item.defaults.module = "iiif-items"
iiifitems_repair_item.defaults.controller = "import"
iiifitems_repair_item.defaults.action = "repair-item"
iiifitems_repair_item.reqs.id = "(\d+)"
iiifitems_repair_item.reverse = "iiif-items/items/:id/repair"

; ===== Jobs =====

;GET: Import form
iiifItemsImport.route = "iiif-items/import"
iiifItemsImport.defaults.module = "iiif-items"
iiifItemsImport.defaults.controller = "import"
iiifItemsImport.defaults.action = "form"

;GET: Status panel
iiifItemsStatus.route = "iiif-items/status"
iiifItemsStatus.defaults.module = "iiif-items"
iiifItemsStatus.defaults.controller = "import"
iiifItemsStatus.defaults.action = "status"

;GET: Maintenance
iiifItemsMaintenance.route = "iiif-items/maintenance"
iiifItemsMaintenance.defaults.module = "iiif-items"
iiifItemsMaintenance.defaults.controller = "import"
iiifItemsMaintenance.defaults.action = "maintenance"

;POST: Clean cache
iiifItemsCleanCache.route = "iiif-items/clean-cache"
iiifItemsCleanCache.defaults.module = "iiif-items"
iiifItemsCleanCache.defaults.controller = "import"
iiifItemsCleanCache.defaults.action = "clean-cache"

;GET: Status update JSON
iiifItemsStatusUpdate.route = "iiif-items/status-update"
iiifItemsStatusUpdate.defaults.module = "iiif-items"
iiifItemsStatusUpdate.defaults.controller = "import"
iiifItemsStatusUpdate.defaults.action = "status-update"


; ===== Mirador Players =====

;GET: Embedded player for individual things
iiifitems_mirador.route = ":things/mirador/:id"
iiifitems_mirador.defaults.module = "iiif-items"
iiifitems_mirador.defaults.controller = "mirador"
iiifitems_mirador.defaults.action = "viewer"
iiifitems_mirador.reqs.things = "(collections|items|files|exhibit_page_blocks)"
iiifitems_mirador.reqs.id = "(\d+)"
iiifitems_mirador.reverse = ":things/mirador/:id"

;GET: Multi-item embedded player for exhibits and other uses
iiifitems_exhibit_mirador.route = "iiif-items/multiviewer"
iiifitems_exhibit_mirador.defaults.module = "iiif-items"
iiifitems_exhibit_mirador.defaults.controller = "mirador"
iiifitems_exhibit_mirador.defaults.action = "multiviewer"
iiifitems_exhibit_mirador.reverse = "iiif-items/multiviewer"

;GET: Embedded player on Neatline (simple single view)
iiifitems_neatline_mirador.route = "iiif-items/nlmirador/:id"
iiifitems_neatline_mirador.defaults.module = "iiif-items"
iiifitems_neatline_mirador.defaults.controller = "mirador"
iiifitems_neatline_mirador.defaults.action = "neatline"
iiifitems_neatline_mirador.reqs.id = "(\d+)"
iiifitems_neatline_mirador.reverse = "iiif-items/nlmirador/:id"

; ===== Mirador Annotator =====

;GET: Wrapper page for annotator
iiifitems_annotate.route = ":things/:id/annotate"
iiifitems_annotate.defaults.module = "iiif-items"
iiifitems_annotate.defaults.controller = "annotator"
iiifitems_annotate.defaults.action = "annotate"
iiifitems_annotate.reqs.things = "(collections|items)"
iiifitems_annotate.reqs.id = "(\d+)"
iiifitems_annotate.reverse = ":things/:id/annotate"

;GET: Annotator-enabled internal Mirador
iiifitems_annotator.route = ":things/:id/annotator"
iiifitems_annotator.defaults.module = "iiif-items"
iiifitems_annotator.defaults.controller = "mirador"
iiifitems_annotator.defaults.action = "annotator"
iiifitems_annotator.reqs.things = "(collections|items)"
iiifitems_annotator.reqs.id = "(\d+)"
iiifitems_annotator.reverse = ":things/:id/annotator"

;GET: Annotation endpoint - List
iiifitems_annotator_list.route = "iiif-items/annotator/:things/:id/index"
iiifitems_annotator_list.defaults.module = "iiif-items"
iiifitems_annotator_list.defaults.controller = "annotator"
iiifitems_annotator_list.defaults.action = "index"
iiifitems_annotator_list.reqs.things = "(collections|items)"
iiifitems_annotator_list.reqs.id = "(\d+)"
iiifitems_annotator_list.reverse = "iiif-items/annotator/:things/:id/index"

;POST: Annotation endpoint - Create
iiifitems_annotator_create.route = "iiif-items/annotator/:things/:id"
iiifitems_annotator_create.defaults.module = "iiif-items"
iiifitems_annotator_create.defaults.controller = "annotator"
iiifitems_annotator_create.defaults.action = "create"
iiifitems_annotator_create.reqs.things = "(collections|items)"
iiifitems_annotator_create.reqs.id = "(\d+)"
iiifitems_annotator_create.reverse = "iiif-items/annotator/:things/:id"

;PUT: Annotation endpoint - Update
iiifitems_annotator_update.route = "iiif-items/annotator/:things/:id/update"
iiifitems_annotator_update.defaults.module = "iiif-items"
iiifitems_annotator_update.defaults.controller = "annotator"
iiifitems_annotator_update.defaults.action = "update"
iiifitems_annotator_update.reqs.things = "(collections|items)"
iiifitems_annotator_update.reqs.id = "(\d+)"
iiifitems_annotator_update.reverse = "iiif-items/annotator/:things/:id/update"

;DELETE: Annotation endpoint - Delete
iiifitems_annotator_delete.route = "iiif-items/annotator/:things/:id/delete"
iiifitems_annotator_delete.defaults.module = "iiif-items"
iiifitems_annotator_delete.defaults.controller = "annotator"
iiifitems_annotator_delete.defaults.action = "delete"
iiifitems_annotator_delete.reqs.things = "(collections|items)"
iiifitems_annotator_delete.reqs.id = "(\d+)"
iiifitems_annotator_delete.reverse = "iiif-items/annotator/:things/:id/delete"
